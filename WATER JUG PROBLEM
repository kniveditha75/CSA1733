# Water Jug Problem in AI

class WaterJug:
    def __init__(self, jug1_capacity, jug2_capacity, target):
        self.jug1_capacity = jug1_capacity
        self.jug2_capacity = jug2_capacity
        self.target = target

    def solve(self):
        visited = set()
        queue = [(0, 0)]
        while queue:
            jug1, jug2 = queue.pop(0)
            if (jug1, jug2) in visited:
                continue
            visited.add((jug1, jug2))
            if jug1 == self.target or jug2 == self.target:
                return True
            # Fill Jug 1
            queue.append((self.jug1_capacity, jug2))
            # Fill Jug 2
            queue.append((jug1, self.jug2_capacity))
            # Empty Jug 1
            queue.append((0, jug2))
            # Empty Jug 2
            queue.append((jug1, 0))
            # Pour Jug 1 into Jug 2
            pour = min(jug1, self.jug2_capacity - jug2)
            queue.append((jug1 - pour, jug2 + pour))
            # Pour Jug 2 into Jug 1
            pour = min(jug2, self.jug1_capacity - jug1)
            queue.append((jug1 + pour, jug2 - pour))
        return False

# Example usage
jug_problem = WaterJug(4, 3, 2)
result = jug_problem.solve()
print("Can measure the target:", result)
